[Notion]
https://treenamu.notion.site/temp-8cc347ab6e0240fbbb511cf31e5eff27

[CA]
# make key-cert set
openssl req -new -x509 -keyout ca-key -out ca-cert -days 3650
(KR, Busan, Busan, Smartm2m, SW, ca-cert, ca@smartm2m.co.kr)


    [Zookeeper]
# Create the truststore
keytool -keystore kafka.zookeeper.truststore.jks -alias ca-cert -import -file ca-cert -storepass test123
# Create the keystore
keytool -keystore kafka.zookeeper.keystore.jks \
-alias zookeeper -validity 3650 -genkey -keyalg RSA \
-storepass test123 -keypass test123 \
-dname "CN=172.30.1.111, OU=swsec, O=smartm2m, L=busan, ST=BS, C=KR"
# Create certificate signing request
keytool -keystore kafka.zookeeper.keystore.jks -alias zookeeper -certreq -file ca-request-zookeeper && \
scp ca-request-zookeeper ca@172.30.1.150:~/Downloads && rm ca-request-zookeeper

# Sign the certificate using CA >> Goto CA
# Import the signed certificate and CA into keystore
keytool -keystore kafka.zookeeper.keystore.jks -alias ca-cert -import -file ca-cert && \
keytool -keystore kafka.zookeeper.keystore.jks -alias zookeeper -import -file ca-signed-zookeeper && rm ca-signed-zookeeper


    [Kafka Broker]
# Create the truststore
keytool -keystore kafka.broker.truststore.jks -alias ca-cert -import -file ca-cert -storepass test123
# Create the keystore
keytool -keystore kafka.broker.keystore.jks \
-alias broker -validity 3650 -genkey -keyalg RSA \
-storepass test123 -keypass test123 \
-dname "CN=172.30.1.111, OU=swsec, O=smartm2m, L=busan, ST=BS, C=KR"

# Create certificate signing request
keytool -keystore kafka.broker.keystore.jks -alias broker -certreq -file ca-request-broker && \
scp ca-request-broker ca@172.30.1.150:~/Downloads && rm ca-request-broker

# Sign the certificate using CA
# Import the signed certificate and CA into keystore
keytool -keystore kafka.broker.keystore.jks -alias ca-cert -import -file ca-cert && \
keytool -keystore kafka.broker.keystore.jks -alias broker -import -file ca-signed-broker && rm ca-signed-broker


    [Kafka Client]
# Create the truststore
keytool -keystore kafka.client.truststore.jks -alias ca-cert -import -file ca-cert -storepass test123
# Create the keystore
keytool -keystore kafka.client.keystore.jks \
-alias client -validity 3650 -genkey -keyalg RSA \
-storepass test123 -keypass test123 \
-dname "CN=172.30.1.111, OU=swsec, O=smartm2m, L=busan, ST=BS, C=KR"

# Create certificate signing request
keytool -keystore kafka.client.keystore.jks -alias client -certreq -file ca-request-client && \
scp ca-request-client ca@172.30.1.150:~/Downloads && rm ca-request-client

# Sign the certificate using CA
# Import the signed certificate and CA into keystore
keytool -keystore kafka.client.keystore.jks -alias ca-cert -import -file ca-cert && \
keytool -keystore kafka.client.keystore.jks -alias client -import -file ca-signed-client && rm ca-signed-client


    [zookeeper-shell]
# Create the truststore
keytool -keystore kafka.zookeeper-client.truststore.jks -alias ca-cert -import -file ca-cert
# Create the keystore
keytool -keystore kafka.zookeeper-client.keystore.jks -alias zookeeper-client -validity 3650 -genkey -keyalg RSA -ext SAN=IP:172.30.1.10
(CN=localhost, OU=SW team, O=Smartm2m, L=Busan, ST=Busan, C=KR)
# Create certificate signing request
keytool -keystore kafka.zookeeper-client.keystore.jks -alias zookeeper-client -certreq -file ca-request-zookeeper-client -ext SAN=IP:172.30.1.10 && \
scp ca-request-zookeeper-client ca@172.30.1.150:~/Downloads && rm ca-request-zookeeper-client

# Sign the certificate using CA
openssl x509 -req -CA ca-cert -CAkey ca-key -in ca-request-zookeeper-client -out ca-signed-zookeeper-client -days 3650 -CAcreateserial

# Import the signed certificate and CA into keystore
keytool -keystore kafka.zookeeper-client.keystore.jks -alias ca-cert -import -file ca-cert && \
keytool -keystore kafka.zookeeper-client.keystore.jks -alias zookeeper-client -import -file ca-signed-zookeeper-client && \
rm ca-cert.srl ca-signed-zookeeper-client

>> order:: zookeeper-shell.sh localhost:2182 -zk-tls-config-file zookeeper-client.properties



    [Kafka Consumer]
# Create the truststore
keytool -keystore kafka.consumer.truststore.jks -alias ca-cert -import -file ca-cert

# Create the keystore
keytool -keystore kafka.consumer.keystore.jks -alias consumer -validity 3650 -genkey -keyalg RSA -ext SAN=IP:172.30.1.10

# Create certificate signing request
keytool -keystore kafka.consumer.keystore.jks -alias consumer -certreq -file ca-request-consumer -ext SAN=IP:172.30.1.10 && \
scp ca-request-consumer ca@172.30.1.150:~/Downloads && rm ca-request-consumer


# Sign the certificate using CA :: go to CA

openssl req -text -in ca-request-producer -noout -verify

openssl x509 -req -CA ca-cert -CAkey ca-key -in ca-request-consumer -out ca-signed-consumer -days 3650 -CAcreateserial \
-extfile <(cat <<END
basicConstraints = CA:FALSE
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
subjectAltName = IP:172.30.1.10
END
) && openssl x509 -text -in ca-signed-consumer -noout && \
scp ca-signed-consumer ca-cert.srl kafka1@172.30.1.10:~/Documents/kafka/ssl && rm ca-*-consumer ca-cert.srl


# Import the signed certificate and CA into keystore
keytool -keystore kafka.consumer.keystore.jks -alias ca-cert -import -file ca-cert && \
keytool -keystore kafka.consumer.keystore.jks -alias consumer -import -file ca-signed-consumer && \
rm ca-cert.srl ca-*-consumer

< order >
kafka-console-consumer.sh --bootstrap-server 172.30.1.101:9092,172.30.1.102:9092,172.30.1.103:9092 --topic first-topic
kafka-console-consumer.sh --bootstrap-server 172.30.1.101:9092,172.30.1.102:9092,172.30.1.103:9092 --topic first-topic --from-beginning --consumer.config consumer.properties

    [Kafka Producer]
# Create the truststore
keytool -keystore kafka.producer.truststore.jks -alias ca-cert -import -file ca-cert

# Create the keystore
keytool -keystore kafka.producer.keystore.jks -alias producer -validity 3650 -genkey -keyalg RSA -ext SAN=IP:172.30.1.10

# Create certificate signing request
keytool -keystore kafka.producer.keystore.jks -alias producer -certreq -file ca-request-producer -ext SAN=IP:172.30.1.10 && \
scp ca-request-producer ca@172.30.1.150:~/Downloads && rm ca-request-producer

# Sign the certificate using CA
openssl x509 -req -CA ca-cert -CAkey ca-key -in ca-request-producer -out ca-signed-producer -days 3650 -CAcreateserial

# Import the signed certificate and CA into keystore
keytool -keystore kafka.producer.keystore.jks -alias ca-cert -import -file ca-cert && \
keytool -keystore kafka.producer.keystore.jks -alias producer -import -file ca-signed-producer && \
rm ca-cert.srl ca-*-producer

< order >
kafka-console-producer.sh --broker-list 172.30.1.101:9092,172.30.1.102:9092,172.30.1.103:9092 --topic first-topic
kafka-console-producer.sh --broker-list 172.30.1.101:9092,172.30.1.102:9092,172.30.1.103:9092 --topic first-topic --producer.config producer.properties


[Mosquitto]
 C=KR | ST=BS | L=busan | O=smartm2m | OU=swsec | CN=172.30.1.111
openssl genrsa -out mosquitto-client-key 2048 && \
openssl req -new -out ca-request-mosquitto-client -key mosquitto-client-key && \
scp ca-request-mosquitto-client ca@172.30.1.150:~/Downloads && rm ca-request*

openssl req -text -in ca-request-mosquitto -noout -verify

openssl x509 -req -CA ca-cert -CAkey ca-key -in ca-request-mosquitto -out mosquitto-cert -days 3650 -CAcreateserial \
-extfile <(cat <<END
basicConstraints = CA:FALSE
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
subjectAltName = IP:172.30.1.250
END
) && openssl x509 -text -in mosquitto-cert -noout && \
scp mosquitto-cert ca-cert.srl mosquitto@172.30.1.250:~/Documents/mosquitto/ssl && rm ca-*-mosquitto mosquitto-cert ca-cert.srl


[Mosquitto-client]

openssl req -text -in ca-request-mosquitto-client -noout -verify

openssl x509 -req -CA ca-cert -CAkey ca-key -in ca-request-mosquitto-client -out mosquitto-client-cert -days 3650 -CAcreateserial \
-extfile <(cat <<END
basicConstraints = CA:FALSE
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
subjectAltName = IP:172.30.1.10
END
) && openssl x509 -text -in mosquitto-client-cert -noout && \
scp mosquitto-client-cert ca-cert.srl node1@172.30.1.10:~/Documents/mosquitto/ssl && rm ca-*-client mosquitto-client-cert ca-cert.srl






